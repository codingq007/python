# *** 클래스, 패키지와 모듈, 파일입출력 개념  정리 ***

# 1. 단위 테스트용으로 사용되는 if문을 적으세요.
if __name__ == '__main__':  

# 2. 파일 입출력 시 자주 사용되는 3가지 모드를 쓰세요.
# r, w, a

# 3. 파일을 모드별로 읽어올 때 사용하는 함수를 쓰세요.
# open

# 4. 파일의 전체 내용을 읽을 때 사용하는 함수를 쓰세요.
# read

# 5. 파일의 내용을 한 줄씩 읽을 때 사용하는 함수를 쓰세요.
# readline

# 6. 파일의 내용을 한 줄단위 리스트로 저장하는 함수를 쓰세요.
# readlines

# 7. 파일을 모드별로 연 후 리소스(메모리)를 반환 하기 위해 반드시 사용하는 함수를 적으세요.
# close()

# 8. close()없이 리소스 반환을 자동으로 해주는 구문을 적으세요.
# with

# 9. 파일에 내용을 쓸 때 사용하는 모드를 아는대로 적으세요.
# w, a

# 10. 파일을 열 때 utf8 인코딩 형식으로 열기위한 파라미터를 적으세요.
# encoding = 'utf8'

# 11. 파일 내용을 읽어올 때 앞뒤 공백을 없애주는 함수를 적으세요.
# strip()

# 12. 다음 예시대로 프로그램을 구현 해보세요.
'''
다음과 같이 resource/score.txt를 만든다.
# score.txt

90
80
78
88
67

위 파일의 점수를 리스트에 추가한후
평균을 구한다.

출력
[ 90, 80, 78, 88, 67 ]
 
Average : ***.**
'''
with open('./resource/score.txt', 'r') as f:
    score = []
    for line in f:
        score.append(int(line))
    print(score)
    print('Average : {:6.2f}'.format(sum(score) / len(score)))

# 13. 로또 번호를 랜덤하게 생성하여 파일에 저장하는 코드를 작성하여 실행하세요.
from random import randint

with open('./resource/score2.txt', 'w') as f:
    for cnt in range(6):
        f.write(str(randint(1, 50)))
        f.write(' ')


# 14. 객체지향 프로그래밍을 영문3글자로 표현하세요.
# OOP

# 15. 객체지향언어에서 '설계도'에 비유되는 것을 무엇이라고 하나요?
# 클래스

# 16. 객체지향 언어의 특징 중 오버라이딩과 관련 있는 것을 아는대로 쓰세요.
############# OOP의 주요특징 ####################
	#1) 추상화-Abstraction
	#  - 어떤 물체의 특징을 부각시켜 표현하고, 나머지 부분은 과감하게 생략하는 것 
	#     ---> 프로그래밍에 접목
	#2) 은닉화-Encapsulation(캡슐화)
	#  - Data를 캡슐화하되 그 Data에 접근할 때 메소드로 접근 하도록 하는 것        
	#3) 다형성-Polymorphism
	#  - 하나의 객체가 여러 가지 타입을 가질 수 있는 것을 의미한다.
	#  - 오버라이드(재정의, override), 오버로딩
	#4) 상속성-Inheritance
	#  - 기존 클래스에 작은 기능이나 특성을 추가하여 새로운 클래스를 만드는 것을 의미
	#  - 부모클래스(기존클래스)의 메소드를 오버라이드하여 변경가능
###############################################

# 다형성, 상속성

# 17. 객체지향 프로그래밍의 4가지 핵심 특징 중 다음 문구와 관계있는 것은?
# " 복잡한 것은 과감히 버리고, 필요한 것만 표현 하는 것"
# 추상화

# 18. 클래스를 정의하는 키워드는?
# class

# 19. 클래스의 멤버(구성)를 아는대로 적으세요.
# 생성자, 메소드, 속성, 소멸자

# 20. attribute(속성)와 behavior(행위, 동작)를 뽑아내는 과정을 무엇이라고 하나요?
# 추상화, 객체 모델링

# 21. 오버라이드(Override)를 간단하게 표현해보세요
# 재정의

# 22. 클래스를 통해 만들어지는 객체를 다른 용어로 무엇이라고 하나요?
# 인스턴스(instance)

''' 문제 : 23 ~ 31 [ 예시 코드 ]
class Person:
    name = '아무개'

    def __init__(self, name):
        self.name = name    

    def _info(self):
        print('인스턴스 변수 : ', A)

    def info():
        print('클래스 변수 :', B)   
'''

# 23. 위의 예시 코드에서 인스턴스 변수와 클래스 변수를 구분해보세요.

# 클래스 변수 : name
# 인스턴스 변수 : self.name

# 24. 위의 예시 코드에서 인스턴스 메소드와 클래스 메소드를 구분해보세요.
# 클래스 메소드 : info()
# 인스턴스 메소드 : _info()


# 25. 위의 예시 코드에서 인스턴스 변수에 접근하는 코드를 작성하세요.
# p1 = Person('홍말똥')
# print(p1.name)

# 26. 위의 예시 코드에서 클래스 변수에 접근하는 코드를 작성하세요.
# Person.name

# 27. 위의 예시 코드에서 A, B에 알맞는 코드를 작성하세요.
# A : self.name
# B : Person.name

# 28. self에 대해 간략하게 설명해 보세요.
# self는 만들어질 인스턴스(객체)를 의미하며, 
# 인스턴스가 만들어지면 자동으로 파이썬에서 self에 전달해줌

# 29. 위의 예시코드를 완성하여 인스턴스 메소드와 클래스 메소들를 호출해 보세요.
# p1 = Person('홍말똥')
# print(p1.name)
# p1._info()

# Person.info()


# 30. 위의 Person 클래스를 상속 받는 학생(Student) 객체를 만들어 다음과 같이 동작할 수 있도록 만들고,
# 실행해 보세요.
#  study 메소드를 호출 시 : "홍길동님은 열심히 공부합니다." 
class Student(Person):
    def study(self):
        print(f'{self.name}님은 열심히 공부합니다.')

student = Student('김말똥')
student.study()


# 31. 위의 Person 클래스를 상속 받는 선생(Teacher) 객체를 다음과 같이 동작할 수 있도록 만들어 보세요.
# teach 메소드를 호출 시 : "홍길동님은 열심히 학생을 가르칩니다.." 
class Teacher(Person):
    def teach(self):
        print(f'{self.name}님은 열심히 학생을 가르칩니다.')

teacher = Teacher('홍길동')        
teacher.teach()

# 수고하셨습니다.. ^^
